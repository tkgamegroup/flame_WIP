if (USE_OPENAL)
	set(USE_SOUND_MODULE on PARENT_SCOPE)

	file(GLOB source_files "*.h*" "*.c*")
	add_library(flame_sound SHARED ${source_files})
	set_target_properties(flame_sound PROPERTIES FOLDER "flame")
	target_compile_definitions(flame_sound PRIVATE FLAME_SOUND_MODULE)
	target_include_directories(flame_sound PRIVATE "${OPENAL_INCLUDE_DIR}")
	target_link_libraries(flame_sound "${OPENAL_LIB_PATH}")
	target_link_libraries(flame_sound flame_foundation)
	add_dependencies(flame_sound typeinfogen_dep)
	add_custom_command(TARGET flame_sound POST_BUILD COMMAND $<TARGET_FILE:typeinfogen> -i $<TARGET_FILE:flame_sound> -d "${CMAKE_CURRENT_SOURCE_DIR}/typeinfo.desc")

	file(GLOB PUBLIC_HEADER "*.h*")
	list(FILTER PUBLIC_HEADER EXCLUDE REGEX ".*_private[.]h$")
	file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/sound")
	add_custom_command(TARGET flame_sound PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${PUBLIC_HEADER} "${CMAKE_SOURCE_DIR}/include/flame/sound")
else()
	set(USE_SOUND_MODULE off PARENT_SCOPE)
endif()
